package vulnerability

import (
	log "github.com/sirupsen/logrus"
	"github.com/urfave/cli/v2"
)

// Vulnerability command flag names
const (
	FlagCVE                  = "cve"
	FlagDate                 = "date"
	FlagOp                   = "op"
	FlagWithHistory          = "with-history"
	FlagFilterCveIDPattern   = "filter-cve-id-pattern"
	FlagFilterDaysSinceAdded = "filter-days-since-added"
	FlagFilterScoreGt        = "filter-score-gt"
	FlagFilterScoreLt        = "filter-score-lt"
	FlagFilterPercentileGt   = "filter-percentile-gt"
	FlagFilterPercentileLt   = "filter-percentile-lt"
	FlagFilterOrderRecords   = "filter-order-records"
)

// Vulnerability command flag usage info
const (
	FlagCVEUsage                  = "Target vulnerability CVE ID"
	FlagDateUsage                 = "Date for the EPSS information (YYYY-MM-DD format)"
	FlagOpUsage                   = "EPSS operation ('lookup' | 'list')"
	FlagWithHistoryUsage          = "Return EPSS results with historical data"
	FlagFilterCveIDPatternUsage   = "'CVE ID pattern' ESPP list operation filter"
	FlagFilterDaysSinceAddedUsage = "'days since added' ESPP list operation filter"
	FlagFilterScoreGtUsage        = "'score is greater than' ESPP list operation filter"
	FlagFilterScoreLtUsage        = "'score is less than' ESPP list operation filter"
	FlagFilterPercentileGtUsage   = "'percentile is greater than' ESPP list operation filter"
	FlagFilterPercentileLtUsage   = "'percentile is less than' ESPP list operation filter"
	FlagFilterOrderRecordsUsage   = "'order returned records' ESPP list operation filter ('score-desc' | 'score-asc' | 'percentile-desc' | 'percentile-asc')"
)

const (
	EpssOpLookup = "lookup"
	EpssOpList   = "list"
)

var Flags = map[string]cli.Flag{
	FlagCVE: &cli.StringSliceFlag{
		Name:    FlagCVE,
		Value:   cli.NewStringSlice(),
		Usage:   FlagCVEUsage,
		EnvVars: []string{"DSLIM_VULN_CVE"},
	},
	FlagDate: &cli.StringFlag{
		Name:    FlagDate,
		Value:   "",
		Usage:   FlagDateUsage,
		EnvVars: []string{"DSLIM_VULN_EPSS_DATE"},
	},
	FlagOp: &cli.StringFlag{
		Name:    FlagOp,
		Value:   EpssOpLookup,
		Usage:   FlagOpUsage,
		EnvVars: []string{"DSLIM_VULN_EPSS_OP"},
	},
	FlagWithHistory: &cli.BoolFlag{
		Name:    FlagWithHistory,
		Value:   false, //defaults to false
		Usage:   FlagWithHistoryUsage,
		EnvVars: []string{"DSLIM_VULN_EPSS_HISTORY"},
	},

	FlagFilterCveIDPattern: &cli.StringFlag{
		Name:    FlagFilterCveIDPattern,
		Value:   "",
		Usage:   FlagFilterCveIDPatternUsage,
		EnvVars: []string{"DSLIM_VULN_EPSS_FILTER_CVEID_PAT"},
	},
	FlagFilterDaysSinceAdded: &cli.UintFlag{
		Name:    FlagFilterDaysSinceAdded,
		Value:   0,
		Usage:   FlagFilterDaysSinceAddedUsage,
		EnvVars: []string{"DSLIM_VULN_EPSS_FILTER_DAYS_SINCE"},
	},
	FlagFilterScoreGt: &cli.Float64Flag{
		Name:    FlagFilterScoreGt,
		Value:   0,
		Usage:   FlagFilterScoreGtUsage,
		EnvVars: []string{"DSLIM_VULN_EPSS_FILTER_SCORE_GT"},
	},
	FlagFilterScoreLt: &cli.Float64Flag{
		Name:    FlagFilterScoreLt,
		Value:   0,
		Usage:   FlagFilterScoreLtUsage,
		EnvVars: []string{"DSLIM_VULN_EPSS_FILTER_SCORE_LT"},
	},

	FlagFilterPercentileGt: &cli.Float64Flag{
		Name:    FlagFilterPercentileGt,
		Value:   0,
		Usage:   FlagFilterPercentileGtUsage,
		EnvVars: []string{"DSLIM_VULN_EPSS_FILTER_PERC_GT"},
	},
	FlagFilterPercentileLt: &cli.Float64Flag{
		Name:    FlagFilterPercentileLt,
		Value:   0,
		Usage:   FlagFilterPercentileLtUsage,
		EnvVars: []string{"DSLIM_VULN_EPSS_FILTER_PERC_LT"},
	},
	FlagFilterOrderRecords: &cli.StringFlag{
		Name:    FlagFilterOrderRecords,
		Value:   "",
		Usage:   FlagFilterOrderRecordsUsage,
		EnvVars: []string{"DSLIM_VULN_EPSS_FILTER_ORDER"},
	},
}

func cflag(name string) cli.Flag {
	cf, ok := Flags[name]
	if !ok {
		log.Fatalf("unknown flag='%s'", name)
	}

	return cf
}
